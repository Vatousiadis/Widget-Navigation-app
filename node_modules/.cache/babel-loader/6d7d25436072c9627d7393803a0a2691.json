{"ast":null,"code":"import { useEffect } from 'react';\nimport useMedia from './useMedia';\nimport useLocalStorage from './useLocalStorage';\n\nconst useDarkMode = () => {\n  const [enabledState, setEnabledState] = useLocalStorage('dark-mode-enabled');\n  const prefersDarkMode = usePrefersDarkMode();\n  const enabled = typeof enabledState !== 'undefined' ? enabledState : prefersDarkMode;\n  useEffect(() => {\n    const className = 'dark-mode';\n    const elementBody = window.document.body;\n    const element = document.getElementById('root');\n\n    if (element) {\n      enabled ? elementBody.classList.add(className) : elementBody.classList.remove(className);\n\n      if (element.children) {\n        for (let i = 0; i < element.children.length; i++) {\n          for (let a = 0; a < element.children[i].children.length; a++) {\n            //  console.log('element', element.children[i].children[a])\n            if (enabled) {\n              console.log('is enabled', enabled);\n              element.children[i].children[a].classList.add(className);\n            } else {\n              element.children[i].children[a].classList.remove(className);\n            }\n          }\n        }\n      }\n    }\n  }, [enabled]);\n  return [enabled, setEnabledState];\n};\n\nconst usePrefersDarkMode = () => {\n  return useMedia(['(prefers-color-scheme: dark)'], [true], false);\n};\n\nexport default useDarkMode;","map":{"version":3,"sources":["C:/Users/Nightrift/Desktop/Coding/Codes/Hooks/Widgets/widgets/src/hooks/useDarkmode.js"],"names":["useEffect","useMedia","useLocalStorage","useDarkMode","enabledState","setEnabledState","prefersDarkMode","usePrefersDarkMode","enabled","className","elementBody","window","document","body","element","getElementById","classList","add","remove","children","i","length","a","console","log"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,eAAe,CAAC,mBAAD,CAAvD;AACA,QAAMI,eAAe,GAAGC,kBAAkB,EAA1C;AAEA,QAAMC,OAAO,GACT,OAAOJ,YAAP,KAAwB,WAAxB,GAAsCA,YAAtC,GAAqDE,eADzD;AAGAN,EAAAA,SAAS,CACL,MAAM;AACF,UAAMS,SAAS,GAAG,WAAlB;AACA,UAAMC,WAAW,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAApC;AAEA,UAAMC,OAAO,GAAGF,QAAQ,CAACG,cAAT,CAAwB,MAAxB,CAAhB;;AACA,QAAID,OAAJ,EAAa;AACTN,MAAAA,OAAO,GACHE,WAAW,CAACM,SAAZ,CAAsBC,GAAtB,CAA0BR,SAA1B,CADG,GAEHC,WAAW,CAACM,SAAZ,CAAsBE,MAAtB,CAA6BT,SAA7B,CAFJ;;AAIA,UAAIK,OAAO,CAACK,QAAZ,EAAsB;AAClB,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,OAAO,CAACK,QAAR,CAAiBE,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9C,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,OAAO,CAACK,QAAR,CAAiBC,CAAjB,EAAoBD,QAApB,CAA6BE,MAAjD,EAAyDC,CAAC,EAA1D,EAA8D;AAC1D;AACA,gBAAId,OAAJ,EAAa;AACLe,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BhB,OAA1B;AACJM,cAAAA,OAAO,CAACK,QAAR,CAAiBC,CAAjB,EAAoBD,QAApB,CAA6BG,CAA7B,EAAgCN,SAAhC,CAA0CC,GAA1C,CAA8CR,SAA9C;AACH,aAHD,MAGO;AACHK,cAAAA,OAAO,CAACK,QAAR,CAAiBC,CAAjB,EAAoBD,QAApB,CAA6BG,CAA7B,EAAgCN,SAAhC,CAA0CE,MAA1C,CAAiDT,SAAjD;AACH;AACJ;AACJ;AACJ;AAEJ;AACJ,GA1BI,EA2BL,CAACD,OAAD,CA3BK,CAAT;AA6BA,SAAO,CAACA,OAAD,EAAUH,eAAV,CAAP;AACH,CArCD;;AAuCA,MAAME,kBAAkB,GAAG,MAAM;AAC7B,SAAON,QAAQ,CAAC,CAAC,8BAAD,CAAD,EAAmC,CAAC,IAAD,CAAnC,EAA2C,KAA3C,CAAf;AACH,CAFD;;AAIA,eAAeE,WAAf","sourcesContent":["import { useEffect } from 'react';\r\nimport useMedia from './useMedia';\r\nimport useLocalStorage from './useLocalStorage';\r\n\r\nconst useDarkMode = () => {\r\n    const [enabledState, setEnabledState] = useLocalStorage('dark-mode-enabled');\r\n    const prefersDarkMode = usePrefersDarkMode();\r\n\r\n    const enabled =\r\n        typeof enabledState !== 'undefined' ? enabledState : prefersDarkMode;\r\n\r\n    useEffect(\r\n        () => {\r\n            const className = 'dark-mode';\r\n            const elementBody = window.document.body;\r\n\r\n            const element = document.getElementById('root')\r\n            if (element) {\r\n                enabled ?\r\n                    elementBody.classList.add(className) :\r\n                    elementBody.classList.remove(className);\r\n\r\n                if (element.children) {\r\n                    for (let i = 0; i < element.children.length; i++) {\r\n                        for (let a = 0; a < element.children[i].children.length; a++) {\r\n                            //  console.log('element', element.children[i].children[a])\r\n                            if (enabled) {\r\n                                    console.log('is enabled', enabled)\r\n                                element.children[i].children[a].classList.add(className);\r\n                            } else {\r\n                                element.children[i].children[a].classList.remove(className);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        },\r\n        [enabled]\r\n    );\r\n    return [enabled, setEnabledState];\r\n}\r\n\r\nconst usePrefersDarkMode = () => {\r\n    return useMedia(['(prefers-color-scheme: dark)'], [true], false);\r\n}\r\n\r\nexport default useDarkMode;"]},"metadata":{},"sourceType":"module"}