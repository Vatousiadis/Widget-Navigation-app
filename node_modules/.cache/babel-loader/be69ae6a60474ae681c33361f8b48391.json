{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nightrift\\\\Desktop\\\\Coding\\\\Codes\\\\Hooks\\\\Widgets\\\\widgets\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Accordion from './components/Accordion';\nimport Search from './components/Search';\nimport Dropdown from './components/Dropdown';\nimport Translate from './components/Tsanslate';\nimport Route from './components/Route';\nimport Header from './components/Header';\nimport useDarkMode from './hooks/useDarkmode';\nconst items = [{\n  title: 'Favourite color?',\n  content: 'Purple'\n}, {\n  title: 'Favourite pet?',\n  content: 'Dog'\n}, {\n  title: 'Favourite food?',\n  content: 'Pizza'\n}];\nconst options = [{\n  label: 'Red',\n  value: 'red'\n}, {\n  label: 'Green',\n  value: 'green'\n}, {\n  label: 'Blue',\n  value: 'blue'\n}];\nexport default (() => {\n  const [darkMode, setDarkMode] = useDarkMode();\n\n  const onChangeDarkMode = () => {\n    !darkMode ? setDarkMode(true) : setDarkMode(false);\n    console.log(darkMode);\n  };\n\n  const [selected, setSelected] = useState(options[0]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    items: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/wikisearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 39\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    label: \"Select a color\",\n    options: options,\n    selected: selected,\n    onSelectedChange: setSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: selected.value\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"This text is \", selected.value)), /*#__PURE__*/React.createElement(Route, {\n    path: \"/translate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Translate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 38\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"ui toggle checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"public\",\n    onChange: onChangeDarkMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Activate Dark Mode\")));\n});","map":{"version":3,"sources":["C:/Users/Nightrift/Desktop/Coding/Codes/Hooks/Widgets/widgets/src/App.js"],"names":["React","useState","useEffect","Accordion","Search","Dropdown","Translate","Route","Header","useDarkMode","items","title","content","options","label","value","darkMode","setDarkMode","onChangeDarkMode","console","log","selected","setSelected","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,MAAMC,KAAK,GAAG,CACV;AACIC,EAAAA,KAAK,EAAE,kBADX;AAEIC,EAAAA,OAAO,EAAE;AAFb,CADU,EAKV;AACID,EAAAA,KAAK,EAAE,gBADX;AAEIC,EAAAA,OAAO,EAAE;AAFb,CALU,EASV;AACID,EAAAA,KAAK,EAAE,iBADX;AAEIC,EAAAA,OAAO,EAAE;AAFb,CATU,CAAd;AAeA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,KAAK,EAAE,KADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CADY,EAKZ;AACID,EAAAA,KAAK,EAAE,OADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CALY,EASZ;AACID,EAAAA,KAAK,EAAE,MADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CATY,CAAhB;AAeA,gBAAe,MAAM;AAEjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,WAAW,EAA3C;;AACA,QAAMS,gBAAgB,GAAG,MAAM;AAC3B,KAACF,QAAD,GAAYC,WAAW,CAAC,IAAD,CAAvB,GAAgCA,WAAW,CAAC,KAAD,CAA3C;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACH,GAJD;;AAOA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAACY,OAAO,CAAC,CAAD,CAAR,CAAxC;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgB,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEH,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CAFJ,eAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0B,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1B,CAHJ,eAII,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAC,gBADV;AAEI,IAAA,OAAO,EAAEG,OAFb;AAGI,IAAA,QAAQ,EAAEQ,QAHd;AAII,IAAA,gBAAgB,EAAEC,WAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAEF,QAAQ,CAACN;AAAlB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmDM,QAAQ,CAACN,KAA5D,CAPJ,CAJJ,eAaI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAyB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,CAbJ,eAcI;AAAK,IAAA,KAAK,EAAC,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,QAA5B;AAAqC,IAAA,QAAQ,EAAEG,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,CAdJ,CADJ;AAqBH,CAhCD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Accordion from './components/Accordion';\r\nimport Search from './components/Search';\r\nimport Dropdown from './components/Dropdown';\r\nimport Translate from './components/Tsanslate';\r\nimport Route from './components/Route';\r\nimport Header from './components/Header';\r\nimport useDarkMode from './hooks/useDarkmode';\r\n\r\nconst items = [\r\n    {\r\n        title: 'Favourite color?',\r\n        content: 'Purple'\r\n    },\r\n    {\r\n        title: 'Favourite pet?',\r\n        content: 'Dog'\r\n    },\r\n    {\r\n        title: 'Favourite food?',\r\n        content: 'Pizza'\r\n    }\r\n]\r\n\r\nconst options = [\r\n    {\r\n        label: 'Red',\r\n        value: 'red'\r\n    },\r\n    {\r\n        label: 'Green',\r\n        value: 'green'\r\n    },\r\n    {\r\n        label: 'Blue',\r\n        value: 'blue'\r\n    }\r\n];\r\n\r\nexport default () => {\r\n\r\n    const [darkMode, setDarkMode] = useDarkMode();\r\n    const onChangeDarkMode = () => {\r\n        !darkMode ? setDarkMode(true) : setDarkMode(false)\r\n\r\n        console.log(darkMode)\r\n    };\r\n\r\n\r\n    const [selected, setSelected] = useState(options[0])\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Route path=\"/\"><Accordion items={items} /></Route>\r\n            <Route path=\"/wikisearch\"><Search /></Route>\r\n            <Route path=\"/dropdown\">\r\n                <Dropdown\r\n                    label=\"Select a color\"\r\n                    options={options}\r\n                    selected={selected}\r\n                    onSelectedChange={setSelected}\r\n                />\r\n                <p style={{ color: selected.value }}>This text is {selected.value}</p>\r\n            </Route>\r\n            <Route path=\"/translate\"><Translate /></Route>\r\n            <div class=\"ui toggle checkbox\">\r\n                <input type=\"checkbox\" name=\"public\" onChange={onChangeDarkMode} />\r\n                <label>Activate Dark Mode</label>\r\n            </div>\r\n        </div>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}