{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nightrift\\\\Desktop\\\\Coding\\\\Codes\\\\Hooks\\\\Widgets\\\\widgets\\\\src\\\\components\\\\Dropdown.js\";\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst Dropdown = ({\n  options,\n  selected,\n  onSelectedChange\n}) => {\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  useEffect(() => {\n    const onBodyClick = event => {\n      if (ref.current.contains(event.target)) {\n        return;\n      }\n\n      setOpen(false);\n    };\n\n    document.body.addEventListener('click', onBodyClick);\n    return () => {\n      document.body.removeEventListener('click', onBodyClick);\n    };\n  }, []);\n  const renderedOptions = options.map(option => {\n    if (option.value === selected.value) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: option.value,\n      className: \"item\",\n      onClick: () => onSelectedChange(option),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, option.label);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Select a color\"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setOpen(!open),\n    className: `ui selection dropdown ${open ? 'visible active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"dropdown icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, selected.label), /*#__PURE__*/React.createElement(\"div\", {\n    className: `menu ${open ? 'visible transition' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, renderedOptions))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"colortext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, selected.value));\n};\n\nexport default Dropdown;","map":{"version":3,"sources":["C:/Users/Nightrift/Desktop/Coding/Codes/Hooks/Widgets/widgets/src/components/Dropdown.js"],"names":["React","useState","useEffect","useRef","Dropdown","options","selected","onSelectedChange","open","setOpen","ref","onBodyClick","event","current","contains","target","document","body","addEventListener","removeEventListener","renderedOptions","map","option","value","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAA6C;AAC1D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMS,GAAG,GAAGP,MAAM,EAAlB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,WAAW,GAAIC,KAAD,IAAW;AAC3B,UAAIF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAAJ,EAAwC;AACpC;AACH;;AACDN,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KALD;;AAOAO,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwCP,WAAxC;AAEA,WAAO,MAAM;AACTK,MAAAA,QAAQ,CAACC,IAAT,CAAcE,mBAAd,CAAkC,OAAlC,EAA2CR,WAA3C;AACH,KAFD;AAIH,GAdQ,EAcN,EAdM,CAAT;AAgBA,QAAMS,eAAe,GAAGf,OAAO,CAACgB,GAAR,CAAaC,MAAD,IAAY;AAC5C,QAAIA,MAAM,CAACC,KAAP,KAAiBjB,QAAQ,CAACiB,KAA9B,EAAqC;AACjC,aAAO,IAAP;AAEH;;AACD,wBACI;AACI,MAAA,GAAG,EAAED,MAAM,CAACC,KADhB;AAEI,MAAA,SAAS,EAAC,MAFd;AAGI,MAAA,OAAO,EAAE,MAAMhB,gBAAgB,CAACe,MAAD,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKA,MAAM,CAACE,KALZ,CADJ;AASH,GAduB,CAAxB;AAgBA,sBACI;AAAK,IAAA,GAAG,EAAEd,GAAV;AAAe,IAAA,SAAS,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAK,IAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,CAACD,IAAF,CAA3B;AACI,IAAA,SAAS,EAAG,yBAAwBA,IAAI,GAAG,gBAAH,GAAsB,EAAG,EADrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBF,QAAQ,CAACkB,KAAhC,CAJJ,eAKI;AAAK,IAAA,SAAS,EAAG,QAAOhB,IAAI,GAAG,oBAAH,GAA0B,EAAG,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6DY,eAA7D,CALJ,CAFJ,CADJ,eAWI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4Bd,QAAQ,CAACiB,KAArC,CAXJ,CADJ;AAgBH,CApDD;;AAsDA,eAAenB,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst Dropdown = ({ options, selected, onSelectedChange }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        const onBodyClick = (event) => {\r\n            if (ref.current.contains(event.target)) {\r\n                return;\r\n            }\r\n            setOpen(false);\r\n        }\r\n\r\n        document.body.addEventListener('click', onBodyClick);\r\n\r\n        return () => {\r\n            document.body.removeEventListener('click', onBodyClick);\r\n        };\r\n\r\n    }, []);\r\n\r\n    const renderedOptions = options.map((option) => {\r\n        if (option.value === selected.value) {\r\n            return null;\r\n\r\n        }\r\n        return (\r\n            <div\r\n                key={option.value}\r\n                className=\"item\"\r\n                onClick={() => onSelectedChange(option)}\r\n            >\r\n                {option.label}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div ref={ref} className=\"ui form\">\r\n            <div className=\"field\">\r\n                <label className=\"label\">Select a color</label>\r\n                <div onClick={() => setOpen(!open)}\r\n                    className={`ui selection dropdown ${open ? 'visible active' : ''}`}\r\n                >\r\n                    <i className=\"dropdown icon\"></i>\r\n                    <div className=\"text\">{selected.label}</div>\r\n                    <div className={`menu ${open ? 'visible transition' : ''}`}>{renderedOptions}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"colortext\">{selected.value}</div>\r\n        </div>\r\n    );\r\n    \r\n};\r\n\r\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}