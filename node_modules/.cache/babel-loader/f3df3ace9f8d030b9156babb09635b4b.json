{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nightrift\\\\Desktop\\\\Coding\\\\Codes\\\\Hooks\\\\Widgets\\\\widgets\\\\src\\\\components\\\\Accordion.js\";\nimport React, { useState } from 'react';\nimport useDarkMode from '../hooks/useDarkmode';\nimport './darkmode.css';\n\nconst Accordion = ({\n  items\n}) => {\n  const [darkMode, setDarkMode] = useDarkMode();\n\n  const onChangeDarkMode = () => {\n    darkMode ? setDarkMode(false) : setDarkMode(true);\n  };\n\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  const onTitleClick = index => {\n    setActiveIndex(index);\n  };\n\n  const renderedItems = items.map((item, index) => {\n    const active = index === activeIndex ? 'active' : '';\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: item.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      value: darkMode,\n      onChange: onChangeDarkMode,\n      className: `title ${active} `,\n      onClick: () => onTitleClick(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"dropdown icon \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }), item.title), /*#__PURE__*/React.createElement(\"div\", {\n      value: darkMode,\n      onChange: onChangeDarkMode,\n      className: `content ${active} `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, item.content)));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    value: darkMode,\n    onChange: onChangeDarkMode,\n    className: \"ui styled accordion dark-mode \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, renderedItems);\n};\n\nexport default Accordion;","map":{"version":3,"sources":["C:/Users/Nightrift/Desktop/Coding/Codes/Hooks/Widgets/widgets/src/components/Accordion.js"],"names":["React","useState","useDarkMode","Accordion","items","darkMode","setDarkMode","onChangeDarkMode","activeIndex","setActiveIndex","onTitleClick","index","renderedItems","map","item","active","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAO,gBAAP;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,WAAW,EAA3C;;AACA,QAAMK,gBAAgB,GAAG,MAAM;AAC3BF,IAAAA,QAAQ,GAAGC,WAAW,CAAC,KAAD,CAAd,GAAwBA,WAAW,CAAC,IAAD,CAA3C;AACH,GAFD;;AAIA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,IAAD,CAA9C;;AAEA,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAC5BF,IAAAA,cAAc,CAACE,KAAD,CAAd;AACH,GAFD;;AAKA,QAAMC,aAAa,GAAGR,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOH,KAAP,KAAiB;AAC7C,UAAMI,MAAM,GAAGJ,KAAK,KAAKH,WAAV,GAAwB,QAAxB,GAAmC,EAAlD;AACA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEM,IAAI,CAACE,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,KAAK,EAAEX,QADX;AACqB,MAAA,QAAQ,EAAEE,gBAD/B;AAEI,MAAA,SAAS,EAAG,SAAQQ,MAAO,GAF/B;AAGI,MAAA,OAAO,EAAE,MAAML,YAAY,CAACC,KAAD,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMKG,IAAI,CAACE,KANV,CADJ,eAUI;AACI,MAAA,KAAK,EAAEX,QADX;AACqB,MAAA,QAAQ,EAAEE,gBAD/B;AAEI,MAAA,SAAS,EAAG,WAAUQ,MAAO,GAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACG,OAAT,CAHJ,CAVJ,CADJ;AAkBH,GApBqB,CAAtB;AAqBA,sBACI;AACI,IAAA,KAAK,EAAEZ,QADX;AACqB,IAAA,QAAQ,EAAEE,gBAD/B;AAEI,IAAA,SAAS,EAAC,gCAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKK,aAHL,CADJ;AAOH,CAzCD;;AA2CA,eAAeT,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport useDarkMode from '../hooks/useDarkmode';\r\nimport './darkmode.css';\r\n\r\nconst Accordion = ({ items }) => {\r\n    const [darkMode, setDarkMode] = useDarkMode();\r\n    const onChangeDarkMode = () => {\r\n        darkMode ? setDarkMode(false) : setDarkMode(true)\r\n    };\r\n\r\n    const [activeIndex, setActiveIndex] = useState(null);\r\n\r\n    const onTitleClick = (index) => {\r\n        setActiveIndex(index)\r\n    };\r\n\r\n\r\n    const renderedItems = items.map((item, index) => {\r\n        const active = index === activeIndex ? 'active' : '';\r\n        return (\r\n            <React.Fragment key={item.title}>\r\n                <div\r\n                    value={darkMode} onChange={onChangeDarkMode}\r\n                    className={`title ${active} `}\r\n                    onClick={() => onTitleClick(index)}\r\n                >\r\n                    <i className=\"dropdown icon \"></i>\r\n                    {item.title}\r\n\r\n                </div>\r\n                <div\r\n                    value={darkMode} onChange={onChangeDarkMode}\r\n                    className={`content ${active} `}>\r\n                    <p>{item.content}</p>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    });\r\n    return (\r\n        <div\r\n            value={darkMode} onChange={onChangeDarkMode}\r\n            className=\"ui styled accordion dark-mode \">\r\n            {renderedItems}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Accordion;"]},"metadata":{},"sourceType":"module"}